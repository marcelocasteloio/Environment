version: "3.9"
services:

  mcio-postgres:
    image: postgres
    container_name: mcio-postgres
    environment:
      POSTGRES_USER: mcio
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: mcio
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - /mcio/docker/volumes/postgres/data:/var/lib/postgresql/data
    networks:
      - mcio

  mcio-postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: mcio-postgres-exporter
    restart: unless-stopped
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://mcio:123456@mcio-postgres:5432/?sslmode=disable"
    depends_on:
      - mcio-postgres
    networks:
      - mcio

  mcio-pgadmin:
    image: dpage/pgadmin4
    container_name: mcio-pgadmin
    restart: unless-stopped
    user: root
    environment:
      PGADMIN_DEFAULT_EMAIL: "mcio@marcelocastelo.io"
      PGADMIN_DEFAULT_PASSWORD: "123456"
    ports:
      - 8080:80
    depends_on:
      - mcio-postgres
    volumes:
      - /mcio/docker/volumes/pgadmin/data:/var/lib/pgadmin
    networks:
      - mcio

  mcio-mongo:
    image: mongo
    container_name: mcio-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: mcio
      MONGO_INITDB_ROOT_PASSWORD: 123456
    ports:
      - 27017:27017
    volumes:
      - /mcio/docker/volumes/mongo/data:/data/db
    networks:
      - mcio

  mcio-mongo-exporter:
    image: percona/mongodb_exporter:2.37.0
    container_name: mcio-mongo-exporter
    restart: unless-stopped
    command:
      - "--mongodb.uri=mongodb://mcio:123456@mcio-mongo:27017" 
      - --discovering-mode 
      - --mongodb.direct-connect 
      - --collect-all
      - --compatible-mode
    ports:
      - 9216:9216
    depends_on:
      - mcio-mongo
    networks:
      - mcio
  
  mcio-mongo-express:
    image: mongo-express
    container_name: mcio-mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mcio-mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: mcio
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
    depends_on:
      - mcio-mongo
    networks:
      - mcio

  mcio-redis:
    image: redis
    container_name: mcio-redis
    restart: unless-stopped
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning --maxmemory 268435456
    volumes: 
      - /mcio/docker/volumes/redis/data:/data
    networks:
      - mcio

  mcio-redis-exporter:
    image: oliver006/redis_exporter
    container_name: mcio-redis-exporter
    restart: unless-stopped
    ports:
      - 9121:9121
    depends_on:
      - mcio-redis
    environment:
      REDIS_ADDR: "mcio-redis:6379"
      REDIS_USER: null
      REDIS_PASSWORD: null
    networks:
      - mcio

  mcio-redis-insight:
    image: redislabs/redisinsight
    container_name: mcio-redis-insight
    restart: unless-stopped
    ports:
      - 8001:8001
    depends_on:
      - mcio-redis
    networks:
      - mcio

  mcio-consul:
    image: consul:1.15.4
    container_name: mcio-consul
    restart: unless-stopped
    command: agent -server -client=0.0.0.0 -data-dir=/consul/data -bootstrap -ui
    ports:
      - '8500:8500'
    environment:
      CONSUL_ENABLE_METRICS: true
    volumes: 
      - /mcio/docker/volumes/consul/data:/consul/data
    networks:
      - mcio

  mcio-consul-import:
    image: consul:1.15.4
    container_name: mcio-consul-import
    command: consul kv import -http-addr=mcio-consul:8500 @/consul/config/consul-kv-import.json
    volumes:
      - ./config/consul/:/consul/config
    depends_on:
      - mcio-consul
    networks:
      - mcio

  mcio-rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: mcio-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: mcio
      RABBITMQ_DEFAULT_PASS: 123456
    ports:
      - 5672:5672
      - 15672:15672
      - 15692:15692
    networks:
      - mcio

  mcio-zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: mcio-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_JMX_PORT: 9101
    networks:
      - mcio

  mcio-kafka-broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: mcio-kafka-broker
    restart: unless-stopped
    ports:
      - "9092:9092"
    depends_on:
      - mcio-zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'mcio-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://mcio-kafka-broker:29092,PLAINTEXT_INTERNAL://localhost:9092
      KAFKA_ADVERTISED_HOST_NAME: "mcio-kafka-broker"
      KAFKA_LISTENERS: PLAINTEXT://:29092, PLAINTEXT_INTERNAL://:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
    networks:
      - mcio

  mcio-kafka-exporter:
    image: danielqsj/kafka-exporter
    container_name: mcio-kafka-exporter
    restart: unless-stopped
    ports:
      - "9308:9308"
    command: "--kafka.server=mcio-kafka-broker:29092 --zookeeper.server=mcio-zookeeper:2181"
    depends_on:
      - mcio-kafka-broker
    networks:
      - mcio

  mcio-kafka-manager:
    image: hlebalbau/kafka-manager:stable
    container_name: mcio-kafka-manager
    restart: unless-stopped
    depends_on:
      - mcio-zookeeper
    environment:
      ZK_HOSTS: "mcio-zookeeper:2181"
      APPLICATION_SECRET: "123456"
    networks:
      - mcio

  mcio-seq:
    image: datalust/seq
    container_name: mcio-seq
    restart: unless-stopped
    ports:
      - 5341:5341
      - 5342:80
    environment:
      ACCEPT_EULA: "Y"
      SEQ_API_KEY: "123456"
    volumes:
      - /mcio/docker/volumes/seq/data:/data
    networks:
      - mcio

  mcio-jaeger:
    image: jaegertracing/all-in-one
    container_name: mcio-jaeger
    restart: unless-stopped
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: ":9411"
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - 6831:6831/udp   # Jaeger Agent (jaeger.json)
      - 6832:6832/udp   # Jaeger Agent (jaeger.thrift)
      - 5778:5778       # Jaeger Agent (http)
      - 16686:16686     # Jaeger Query
      - 14250:14250     # Jaeger Collector
      - 14268:14268     # Jaeger Collector (http)
      - 14269:14269     # Jaeger Ingester (prometheus metrics)
      - 9411:9411       # Zipkin Collector
    networks:
      - mcio

  mcio-otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: mcio-otel-collector
    restart: unless-stopped
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/open-telemetry/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - 8888:8888   # Prometheus metrics exposed by the collector
      - 8889:8889   # Prometheus exporter metrics
      - 4317:4317   # OTLP gRPC receiver
      - 4318:4318   # OTLP http receiver
    depends_on:
      - mcio-jaeger
      - mcio-seq
    networks:
      - mcio

  mcio-vault:
    image: vault:1.13.3
    container_name: mcio-vault
    restart: unless-stopped
    ports:
      - "8201:8201"
    environment:
      VAULT_ADDR: 'https://0.0.0.0:8201'
      VAULT_DEV_ROOT_TOKEN_ID: '123456'
      VAULT_TOKEN: '123456'
      VAULT_DEV_LISTEN_ADDRESS: '0.0.0.0:8201'
    cap_add:
      - IPC_LOCK
    volumes:
      - /mcio/docker/volumes/vault/data:/data
    healthcheck:
      retries: 5
    command: server -dev -dev-root-token-id="123456"
    networks:
      - mcio

  mcio-prometheus:
    image: prom/prometheus:latest
    container_name: mcio-prometheus
    restart: unless-stopped
    depends_on:
      - mcio-postgres-exporter
      - mcio-redis-exporter
      - mcio-mongo-exporter 
      - mcio-rabbitmq
      - mcio-jaeger
      - mcio-otel-collector
      - mcio-kafka-exporter
    ports:
        - 9090:9090
    volumes:
        - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
        - /mcio/docker/volumes/prometheus/data:/prometheus
    user: "$UID:$GID"
    networks:
      - mcio

  mcio-grafana:
    image: grafana/grafana
    container_name: mcio-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=123456
    ports:
      - 3000:3000
    depends_on:
      - mcio-prometheus
      - mcio-postgres
      - mcio-redis
    volumes:
      - /mcio/docker/volumes/grafana/data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    user: "$UID:$GID"
    networks:
      - mcio

  mcio-portainer:
    image: portainer/portainer-ce:latest
    container_name: mcio-portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mcio/docker/volumes/portainer/data:/data
    ports:
      - 9000:9000
    networks:
      - mcio

networks:
  mcio:
    driver: bridge